{"version":3,"sources":["Context/FormContext.tsx","Screens/FormTwo.tsx","Components/CheckBoxWithLabel.tsx","Screens/MainForm.tsx","Screens/Summary.tsx","Screens/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FormContext","createContext","FormProvider","children","useState","currentForm","setCurrentForm","fever","setFever","cough","setCough","shortnessOfBreath","setShortnessOfBreath","headache","setHeadache","lossOfSenses","setLossOfSenses","soreThroat","setSoreThroat","aches","setAches","country","setCountry","getNumOfSymptoms","num","Provider","value","getNextForm","getSymptoms","symptoms","push","FormTwo","useContext","countries","setCountries","stats","setStats","useEffect","fetch","then","response","json","data","length","point","active","Active","confirmed","Confirmed","deaths","Deaths","cs","i","Country","slug","Slug","sort","a","b","className","Select","variant","required","onChange","event","target","map","c","MenuItem","style","marginTop","Button","color","onClick","undefined","CheckBoxWithLabel","label","checked","updateChecked","display","alignItems","flex","textAlign","Checkbox","MainForm","setChecked","symptom","Summary","Form","form","App","Paper","elevation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA4BaA,EAAcC,wBAA6C,IAE3DC,EAAe,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAwC,EAC7BC,mBAAoB,GADS,mBAC5DC,EAD4D,KAC/CC,EAD+C,OAEzCF,oBAAS,GAFgC,mBAE5DG,EAF4D,KAErDC,EAFqD,OAGzCJ,oBAAS,GAHgC,mBAG5DK,EAH4D,KAGrDC,EAHqD,OAIjBN,oBAAS,GAJQ,mBAI5DO,EAJ4D,KAIzCC,EAJyC,OAKnCR,oBAAS,GAL0B,mBAK5DS,EAL4D,KAKlDC,EALkD,OAM3BV,oBAAS,GANkB,mBAM5DW,EAN4D,KAM9CC,EAN8C,OAO/BZ,oBAAS,GAPsB,mBAO5Da,EAP4D,KAOhDC,EAPgD,OAQzCd,oBAAS,GARgC,mBAQ5De,EAR4D,KAQrDC,EARqD,OASrChB,mBAAwB,MATa,mBAS5DiB,EAT4D,KASnDC,EATmD,KAW7DC,EAAmB,WACrB,IAAIC,EAAM,EASV,OARIjB,IAAOiB,GAAO,GACdf,IAAOe,GAAO,GACdb,IAAmBa,GAAO,GAC1BX,IAAUW,GAAO,GACjBT,IAAcS,GAAO,GACrBP,IAAYO,GAAO,GACnBL,IAAOK,GAAO,GAEXA,GA0BX,OACI,cAACxB,EAAYyB,SAAb,CACIC,MAAO,CACHrB,cACAC,iBACAqB,YAfQ,WACI,IAAhBtB,GACIkB,KAAsB,EACtBjB,EAAe,GAIvBA,EAAe,IASPiB,mBACAK,YA9BQ,WAChB,IAAMC,EAAqB,GAS3B,OARItB,GAAOsB,EAASC,KAAK,SACrBrB,GAAOoB,EAASC,KAAK,SACrBnB,GAAmBkB,EAASC,KAAK,uBACjCjB,GAAUgB,EAASC,KAAK,YACxBf,GAAcc,EAASC,KAAK,kBAC5Bb,GAAYY,EAASC,KAAK,eAC1BX,GAAOU,EAASC,KAAK,wBAElBD,GAsBCtB,QACAE,QACAE,oBACAE,WACAE,eACAE,aACAE,QAEAX,WACAE,WACAE,uBACAE,cACAE,kBACAE,gBACAE,WAEAC,UACAC,cAzBR,SA4BKnB,K,wBChGE,SAAS4B,IAAyB,IAAD,EACCC,qBAAWhC,GAAhD2B,EADoC,EACpCA,YAAaN,EADuB,EACvBA,QAASC,EADc,EACdA,WADc,EAGVlB,mBAEhC,MAL0C,mBAGrC6B,EAHqC,KAG1BC,EAH0B,OAMlB9B,mBAA2B,MANT,mBAMrC+B,EANqC,KAM9BC,EAN8B,KAQ5CC,qBAAU,WACU,OAAZhB,GACJiB,MAAM,4CAAD,OAA6CjB,IAC7CkB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,GAAoB,IAAhBA,EAAKC,OAAc,CACnB,IAAMC,EAAQF,EAAKA,EAAKC,OAAS,GACjCP,EAAS,CACLS,OAAQD,EAAME,OACdC,UAAWH,EAAMI,UACjBC,OAAQL,EAAMM,eAI/B,CAAC7B,IAEJgB,qBAAU,WACNC,MAAM,wCACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEH,IADA,IAAMS,EAAK,GACFC,EAAI,EAAGA,EAAIV,EAAKC,OAAQS,GAAK,EAClCD,EAAGrB,KAAK,CACJT,QAASqB,EAAKU,GAAGC,QACjBC,KAAMZ,EAAKU,GAAGG,OAGtBJ,EAAGK,MAAK,SAACC,EAAGC,GACR,OAAID,EAAEpC,QAAUqC,EAAErC,SACN,EAEL,KAEXa,EAAaiB,GACb7B,EAAY,sBAErB,IAWH,OACI,sBAAKqC,UAAU,QAAf,UACI,qBAAKA,UAAU,WAAf,+CACA,qBAAKA,UAAU,OAAf,0TAOA,8BACI,cAACC,EAAA,EAAD,CACIC,QAAQ,WACRC,UAAQ,EACRC,SAvBG,SACfC,GAKA1C,EAAY0C,EAAMC,OAAOvC,QAkBbA,MAAOL,EAJX,gBAMKY,QANL,IAMKA,OANL,EAMKA,EAAWiC,KAAI,SAACC,GACb,OAAO,cAACC,EAAA,EAAD,CAAU1C,MAAOyC,EAAEb,KAAnB,SAA0Ba,EAAE9C,iBAI/C,sBAAKgD,MAAO,CAAEC,UAAW,IAAzB,UACI,qDAAiBnC,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAOY,aACxB,kDAAcZ,QAAd,IAAcA,OAAd,EAAcA,EAAOU,UACrB,kDAAcV,QAAd,IAAcA,OAAd,EAAcA,EAAOc,aAGzB,qBAAKoB,MAAO,CAAEC,UAAW,IAAzB,SACI,cAACC,EAAA,EAAD,CACIV,QAAQ,YACRW,MAAM,UACNC,QAAS,gBACeC,IAAhB/C,GACAA,KALZ,yB,YCrFD,SAASgD,EAAT,GAIU,IAHrBC,EAGoB,EAHpBA,MACAC,EAEoB,EAFpBA,QACAC,EACoB,EADpBA,cAMA,OACI,sBAAKT,MAAO,CAAEU,QAAS,OAAQC,WAAY,UAA3C,UACI,sBAAMX,MAAO,CAAEY,KAAM,EAAGC,UAAW,QAAnC,SAA8CN,IAC9C,cAACO,EAAA,EAAD,CAAUN,QAASA,EAASd,SAPnB,WACbe,GAAeD,IAMqCL,MAAM,eCRnD,SAASY,IAA0B,IAAD,EAiBzCpD,qBAAWhC,GAfXO,EAFyC,EAEzCA,MACAC,EAHyC,EAGzCA,SACAC,EAJyC,EAIzCA,MACAC,EALyC,EAKzCA,SACAC,EANyC,EAMzCA,kBACAC,EAPyC,EAOzCA,qBACAC,EARyC,EAQzCA,SACAC,EATyC,EASzCA,YACAC,EAVyC,EAUzCA,aACAC,EAXyC,EAWzCA,gBACAC,EAZyC,EAYzCA,WACAC,EAbyC,EAazCA,cACAC,EAdyC,EAczCA,MACAC,EAfyC,EAezCA,SACAO,EAhByC,EAgBzCA,YAGEE,EAAuB,CACzB,CAAE+C,MAAO,QAASC,QAAStE,EAAQ8E,WAAY7E,GAC/C,CAAEoE,MAAO,QAASC,QAASpE,EAAQ4E,WAAY3E,GAC/C,CACIkE,MAAO,sBACPC,QAASlE,EACT0E,WAAYzE,GAEhB,CAAEgE,MAAO,WAAYC,QAAShE,EAAWwE,WAAYvE,GACrD,CACI8D,MAAO,sCACPC,QAAS9D,EACTsE,WAAYrE,GAEhB,CACI4D,MAAO,cACPC,QAAS5D,EACToE,WAAYnE,GAEhB,CACI0D,MAAO,uBACPC,QAAS1D,EACTkE,WAAYjE,IAIpB,OACI,sBAAKuC,UAAU,QAAf,UACI,qBAAKA,UAAU,WAAf,uBACC9B,EAASqC,KAAI,SAACoB,GACX,OACI,cAACX,EAAD,CACIC,MAAOU,EAAQV,MACfC,QAASS,EAAQT,QACjBC,cAAeQ,EAAQD,YAH3B,UAIYC,EAAQV,MAJpB,cASR,qBAAKP,MAAO,CAAEC,UAAW,IAAzB,SACI,cAACC,EAAA,EAAD,CACIV,QAAQ,YACRW,MAAM,UACNC,QAAS,gBACeC,IAAhB/C,GACAA,KALZ,yBCtED,SAAS4D,IAAyB,IAAD,EACOvD,qBAAWhC,GAAtDuB,EADoC,EACpCA,iBAAkBK,EADkB,EAClBA,YAAaP,EADK,EACLA,QAEvC,OACI,sBAAKsC,UAAU,QAAf,UACI,qBAAKA,UAAU,WAAf,sBACCpC,GAAoBA,IAAqB,EACtC,sBAAKoC,UAAU,OAAf,UACI,6EAEKpC,IAFL,yDAKA,qBAAK8C,MAAO,CAAEC,UAAW,IAAzB,iDAGA,8BACK1C,GACGA,IAAcsC,KAAI,SAACoB,GACf,OAAO,qCAAQA,UAG1BjE,GACG,sBAAKgD,MAAO,CAAEC,UAAW,IAAzB,2HAGejD,QAKvB,qBAAKsC,UAAU,OAAf,+HCzBD,SAAS6B,EAAT,GAA8C,IAA9BC,EAA6B,EAA7BA,KAC3B,OAAa,IAATA,EAAmB,cAACL,EAAD,IACV,IAATK,EAAmB,cAAC1D,EAAD,IACV,IAAT0D,EAAmB,cAACF,EAAD,IAEhB,wBCRX,IAeeG,EAfO,WAAqB,IAC/BrF,EAAgB2B,qBAAWhC,GAA3BK,YAER,OACI,qBAAKsD,UAAU,MAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,gCACA,cAACgC,EAAA,EAAD,CAAOC,UAAW,EAAlB,SACI,cAACJ,EAAD,CAAMC,KAAMpF,YCIjBwF,EAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBxD,MACjB,YAAkD,IAA/CyD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCLxBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.24168440.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { createContext, ReactNode, useState } from 'react'\n\nexport interface FormContextInterface {\n    currentForm: 1 | 2 | 3\n    setCurrentForm: React.Dispatch<React.SetStateAction<1 | 2 | 3>>\n    getNextForm: () => void\n    getNumOfSymptoms: () => number\n    getSymptoms: () => string[]\n    fever: boolean\n    cough: boolean\n    shortnessOfBreath: boolean\n    headache: boolean\n    lossOfSenses: boolean\n    soreThroat: boolean\n    aches: boolean\n    setFever: React.Dispatch<React.SetStateAction<boolean>>\n    setCough: React.Dispatch<React.SetStateAction<boolean>>\n    setShortnessOfBreath: React.Dispatch<React.SetStateAction<boolean>>\n    setHeadache: React.Dispatch<React.SetStateAction<boolean>>\n    setLossOfSenses: React.Dispatch<React.SetStateAction<boolean>>\n    setSoreThroat: React.Dispatch<React.SetStateAction<boolean>>\n    setAches: React.Dispatch<React.SetStateAction<boolean>>\n    country: string | null\n    setCountry: React.Dispatch<React.SetStateAction<string | null>>\n}\n\nexport const FormContext = createContext<Partial<FormContextInterface>>({})\n\nexport const FormProvider = ({ children }: { children: ReactNode }) => {\n    const [currentForm, setCurrentForm] = useState<1 | 2 | 3>(1)\n    const [fever, setFever] = useState(false)\n    const [cough, setCough] = useState(false)\n    const [shortnessOfBreath, setShortnessOfBreath] = useState(false)\n    const [headache, setHeadache] = useState(false)\n    const [lossOfSenses, setLossOfSenses] = useState(false)\n    const [soreThroat, setSoreThroat] = useState(false)\n    const [aches, setAches] = useState(false)\n    const [country, setCountry] = useState<string | null>(null)\n\n    const getNumOfSymptoms = (): number => {\n        let num = 0\n        if (fever) num += 1\n        if (cough) num += 1\n        if (shortnessOfBreath) num += 1\n        if (headache) num += 1\n        if (lossOfSenses) num += 1\n        if (soreThroat) num += 1\n        if (aches) num += 1\n\n        return num\n    }\n\n    const getSymptoms = (): string[] => {\n        const symptoms: string[] = []\n        if (fever) symptoms.push('Fever')\n        if (cough) symptoms.push('Cough')\n        if (shortnessOfBreath) symptoms.push('Shortness of Breath')\n        if (headache) symptoms.push('Headache')\n        if (lossOfSenses) symptoms.push('Loss of Senses')\n        if (soreThroat) symptoms.push('Sore Throat')\n        if (aches) symptoms.push('Muscle or Body aches')\n\n        return symptoms\n    }\n\n    const getNextForm = () => {\n        if (currentForm === 1) {\n            if (getNumOfSymptoms() >= 3) {\n                setCurrentForm(2)\n                return\n            }\n        }\n        setCurrentForm(3)\n    }\n\n    return (\n        <FormContext.Provider\n            value={{\n                currentForm,\n                setCurrentForm,\n                getNextForm,\n                getNumOfSymptoms,\n                getSymptoms,\n                //\n                fever,\n                cough,\n                shortnessOfBreath,\n                headache,\n                lossOfSenses,\n                soreThroat,\n                aches,\n                //\n                setFever,\n                setCough,\n                setShortnessOfBreath,\n                setHeadache,\n                setLossOfSenses,\n                setSoreThroat,\n                setAches,\n                //\n                country,\n                setCountry,\n            }}\n        >\n            {children}\n        </FormContext.Provider>\n    )\n}\n","import { Button, MenuItem, Select } from '@material-ui/core'\nimport React, { ReactElement, useContext, useEffect, useState } from 'react'\nimport { FormContext } from '../Context/FormContext'\n\ntype StatsType = {\n    active: number\n    confirmed: number\n    deaths: number\n}\n\nexport default function FormTwo(): ReactElement {\n    const { getNextForm, country, setCountry } = useContext(FormContext)\n\n    const [countries, setCountries] = useState<\n        { country: string; slug: string }[] | null\n    >(null)\n    const [stats, setStats] = useState<StatsType | null>(null)\n\n    useEffect(() => {\n        if (country === null) return\n        fetch(`https://api.covid19api.com/total/country/${country}`)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.length !== 0) {\n                    const point = data[data.length - 1]\n                    setStats({\n                        active: point.Active,\n                        confirmed: point.Confirmed,\n                        deaths: point.Deaths,\n                    })\n                }\n            })\n    }, [country])\n\n    useEffect(() => {\n        fetch('https://api.covid19api.com/countries')\n            .then((response) => response.json())\n            .then((data) => {\n                const cs = []\n                for (let i = 0; i < data.length; i += 1) {\n                    cs.push({\n                        country: data[i].Country as string,\n                        slug: data[i].Slug as string,\n                    })\n                }\n                cs.sort((a, b) => {\n                    if (a.country < b.country) {\n                        return -1\n                    }\n                    return 1\n                })\n                setCountries(cs)\n                setCountry!('united-states')\n            })\n    }, [])\n\n    const countrySet = (\n        event: React.ChangeEvent<{\n            name?: string | undefined\n            value: unknown\n        }>\n    ): void => {\n        setCountry!(event.target.value as string)\n    }\n\n    return (\n        <div className=\"paper\">\n            <div className=\"subtitle\">Uh oh! You most likely have Covid</div>\n            <div className=\"text\">\n                You have more than 2 symptoms, it is likely that you have\n                COVID-19. There are efforts around the world to track\n                information about this virus. Please select your state so that\n                we may further track this data in your state. Selecting your\n                state will also display the current statistics about your state.\n            </div>\n            <div>\n                <Select\n                    variant=\"outlined\"\n                    required\n                    onChange={countrySet}\n                    value={country}\n                >\n                    {countries?.map((c) => {\n                        return <MenuItem value={c.slug}>{c.country}</MenuItem>\n                    })}\n                </Select>\n            </div>\n            <div style={{ marginTop: 20 }}>\n                <div>Confirmed: {stats?.confirmed}</div>\n                <div>Active: {stats?.active}</div>\n                <div>Deaths: {stats?.deaths}</div>\n            </div>\n\n            <div style={{ marginTop: 40 }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                        if (getNextForm !== undefined) {\n                            getNextForm()\n                        }\n                    }}\n                >\n                    Submit\n                </Button>\n            </div>\n        </div>\n    )\n}\n","import { Checkbox } from '@material-ui/core'\nimport React, { ReactElement } from 'react'\n\ninterface Props {\n    label: string\n    checked: boolean\n    updateChecked: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function CheckBoxWithLabel({\n    label,\n    checked,\n    updateChecked,\n}: Props): ReactElement {\n    const onChange = (): void => {\n        updateChecked(!checked)\n    }\n\n    return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n            <span style={{ flex: 1, textAlign: 'left' }}>{label}</span>\n            <Checkbox checked={checked} onChange={onChange} color=\"primary\" />\n        </div>\n    )\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { ReactElement, useContext } from 'react'\nimport { Button } from '@material-ui/core'\nimport { FormContext } from '../Context/FormContext'\nimport '../App.css'\nimport CheckBoxWithLabel from '../Components/CheckBoxWithLabel'\n\ninterface ISymptom {\n    label: string\n    checked: boolean\n    setChecked: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function MainForm(): ReactElement {\n    const {\n        fever,\n        setFever,\n        cough,\n        setCough,\n        shortnessOfBreath,\n        setShortnessOfBreath,\n        headache,\n        setHeadache,\n        lossOfSenses,\n        setLossOfSenses,\n        soreThroat,\n        setSoreThroat,\n        aches,\n        setAches,\n        getNextForm,\n    } = useContext(FormContext)\n\n    const symptoms: ISymptom[] = [\n        { label: 'Fever', checked: fever!, setChecked: setFever! },\n        { label: 'Cough', checked: cough!, setChecked: setCough! },\n        {\n            label: 'Shortness of Breath',\n            checked: shortnessOfBreath!,\n            setChecked: setShortnessOfBreath!,\n        },\n        { label: 'Headache', checked: headache!, setChecked: setHeadache! },\n        {\n            label: 'Loss of Senses (smell and/or taste)',\n            checked: lossOfSenses!,\n            setChecked: setLossOfSenses!,\n        },\n        {\n            label: 'Sore Throat',\n            checked: soreThroat!,\n            setChecked: setSoreThroat!,\n        },\n        {\n            label: 'Body or Muscle aches',\n            checked: aches!,\n            setChecked: setAches!,\n        },\n    ]\n\n    return (\n        <div className=\"paper\">\n            <div className=\"subtitle\">symptoms:</div>\n            {symptoms.map((symptom) => {\n                return (\n                    <CheckBoxWithLabel\n                        label={symptom.label}\n                        checked={symptom.checked}\n                        updateChecked={symptom.setChecked}\n                        key={`${symptom.label}-check`}\n                    />\n                )\n            })}\n\n            <div style={{ marginTop: 40 }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                        if (getNextForm !== undefined) {\n                            getNextForm()\n                        }\n                    }}\n                >\n                    Submit\n                </Button>\n            </div>\n        </div>\n    )\n}\n","import React, { ReactElement, useContext } from 'react'\nimport { FormContext } from '../Context/FormContext'\n\nexport default function Summary(): ReactElement {\n    const { getNumOfSymptoms, getSymptoms, country } = useContext(FormContext)\n\n    return (\n        <div className=\"paper\">\n            <div className=\"subtitle\">Summary:</div>\n            {getNumOfSymptoms && getNumOfSymptoms() > 2 ? (\n                <div className=\"text\">\n                    <div>\n                        Based on the amount of symptoms you have (\n                        {getNumOfSymptoms()}), you most likely have covid and\n                        should stay home.\n                    </div>\n                    <div style={{ marginTop: 20 }}>\n                        Here are the symptoms you selected:\n                    </div>\n                    <div>\n                        {getSymptoms &&\n                            getSymptoms().map((symptom) => {\n                                return <div>- {symptom}</div>\n                            })}\n                    </div>\n                    {country && (\n                        <div style={{ marginTop: 20 }}>\n                            Thank you for submitting your information, we have\n                            also submitted this information to your countrys\n                            database: {country}\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <div className=\"text\">\n                    Good news, you most likely don&apos;t have covid. It looks\n                    like you have less than 3 symptoms. Stay safe out there!\n                </div>\n            )}\n        </div>\n    )\n}\n","import React, { ReactElement } from 'react'\nimport FormTwo from './FormTwo'\nimport MainForm from './MainForm'\nimport Summary from './Summary'\n\ninterface Props {\n    form: 1 | 2 | 3\n}\n\nexport default function Form({ form }: Props): ReactElement {\n    if (form === 1) return <MainForm />\n    if (form === 2) return <FormTwo />\n    if (form === 3) return <Summary />\n\n    return <div />\n}\n","import React, { ReactElement, useContext } from 'react'\nimport './App.css'\nimport { Paper } from '@material-ui/core'\nimport { FormContext } from './Context/FormContext'\nimport Form from './Screens/Form'\n\nconst App: React.FC = (): ReactElement => {\n    const { currentForm } = useContext(FormContext)\n\n    return (\n        <div className=\"App\">\n            <div className=\"form\">\n                <div className=\"title\">Do you have covid?</div>\n                <Paper elevation={5}>\n                    <Form form={currentForm!} />\n                </Paper>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { FormProvider } from './Context/FormContext'\n\nReactDOM.render(\n    <React.StrictMode>\n        <FormProvider>\n            <App />\n        </FormProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}